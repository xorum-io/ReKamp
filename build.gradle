buildscript {
    repositories {
        google()
        mavenCentral()
        mavenLocal()
        gradlePluginPortal()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.android.tools.build:gradle:$gradle_android_version"
        classpath "io.github.gradle-nexus:publish-plugin:$nexus_plugin_version"
    }
}

repositories {
    mavenCentral()
    google()
    mavenLocal()
}

apply plugin: 'kotlin-multiplatform'
apply plugin: 'maven-publish'
apply plugin: 'com.android.library'
apply plugin: 'io.github.gradle-nexus.publish-plugin'
apply plugin: 'signing'

android {
    compileSdkVersion 33
    defaultConfig {
        minSdkVersion 15
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }
}

kotlin {
    jvm()

    android {
        publishLibraryVariants("release", "debug")
    }

    iosArm32() {
        binaries {
            framework()
        }
    }
    iosArm64() {
        binaries {
            framework()
        }
    }
    iosX64() {
        binaries {
            framework()
        }
    }

    sourceSets {
        commonMain {
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-stdlib-common:$kotlin_version"
            }
        }

        jvmMain {
            dependencies {
                implementation kotlin('stdlib-jdk8')
            }
        }

        androidMain {
            dependencies {
                implementation kotlin('stdlib-jdk8')
            }
        }

        nativeMain {
            dependsOn(commonMain)
        }

        iosArm64Main {
            dependsOn(nativeMain)
        }

        iosArm32Main {
            dependsOn(nativeMain)
        }

        iosX64Main {
            dependsOn(nativeMain)
        }
    }
}

afterEvaluate {
    project.publishing.publications.all {
        groupId = group
        if (it.name.contains('metadata')) {
            artifactId = "$libraryName"
        } else {
            artifactId = "$libraryName-$name"
        }
    }
}

apply from: rootProject.file('pom.gradle')
apply from: rootProject.file('gradle/publish.gradle')
apply from: rootProject.file('gradle/nexus.gradle')
